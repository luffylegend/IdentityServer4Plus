<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFrameworks>net8.0;net9.0</TargetFrameworks>
        <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
        <RootNamespace>IdentityServerHost</RootNamespace>
        <UserSecretsId>e60c119c-8b86-4016-9d44-80e25948dbba</UserSecretsId>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AnalysisMode>all</AnalysisMode>
    </PropertyGroup>

    <ItemGroup>
        <Content Remove="compilerconfig.json" />
    </ItemGroup>

    <ItemGroup>
        <None Include="compilerconfig.json" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Authentication.Certificate" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" PrivateAssets="All" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" />
        <PackageReference Include="Microsoft.IdentityModel.JsonWebTokens" />
        
        <PackageReference Include="OpenTelemetry" />
        <PackageReference Include="OpenTelemetry.Exporter.Console" />
        <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
        <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
        <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
        <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
        <PackageReference Include="OpenTelemetry.Instrumentation.SqlClient" />

        <PackageReference Include="Serilog.AspNetCore" />
    </ItemGroup>

    <ItemGroup>
        <!-- The packages in this ItemGroup are all transitive dependencies that
             would otherwise resolve to a version with a security vulnerabilitiy. 
             In future, we would like to update Microsoft.Data.SqlClient and
             Microsoft.EntityFrameworkCore, and remove these explicit dependencies
             (assuming that future versions of the intermediate dependencies that
             don't have this problem exist someday). -->
        <PackageReference Include="Azure.Identity" />
        <PackageReference Include="System.Formats.Asn1" />
        <!--<PackageReference Include="System.Text.Json" />-->
        <PackageReference Include="System.Drawing.Common" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\..\main\IdentityServer4Plus\IdentityServer4Plus.csproj" />
        <ProjectReference Include="..\..\main\Configuration\IdentityServer4Plus.Configuration.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Compile Include="..\Config\Clients.cs">
            <Link>Configuration\Clients.cs</Link>
        </Compile>
        <Compile Include="..\Config\ClientsConsole.cs">
            <Link>Configuration\ClientsConsole.cs</Link>
        </Compile>
        <Compile Include="..\Config\ClientsWeb.cs">
            <Link>Configuration\ClientsWeb.cs</Link>
        </Compile>
        <Compile Include="..\Config\Resources.cs">
            <Link>Configuration\Resources.cs</Link>
        </Compile>
    </ItemGroup>

    <ItemGroup>
      <Content Update="Pages\ServerSideSessions\Index.cshtml">
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </Content>
    </ItemGroup>
</Project>